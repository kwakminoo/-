 #단층 신경망을 이용한 패턴 분류기
 import numpy as np

defstep_function(z):

    T=0
    if z > T:
        y=1
    elif z ==T:
        y-0
    elif z < T:
        y=-1

    return y:

x = np.array([1,1,1],[-1,-1,-1])

w = np.array([1,1,0].reshape[3,1])

print(step_function(x[0].dot(w)))
print(step_function(x[1], dot(w)))

----------------------------------------------------

import numpy as np
def step_function(z):
    T=0
    if z >= T:
        y=1;
    elif z < T:
        y=0
    
    return y

x = np.array([1,1,1], [1,0,1], [0,1,1], [0,0,1])
w = np.array([1,1,-1.5].reshape([3,1]))

print(step_function(x[0].dot(W)))
print(step_function(x[1].dot(W)))
print(step_function(np.dot(x[2].W))
print(step_function(np.dot(x[3].W))

---------------------------------------------------

def step_function(z):
    T = 0
    if z >= T:
        y = 1
    elif z < T:
        y = 0
    return y

x = np.array([1,1,1], [1,0,1], [0,1,1], [0,0,1])

w = np.array([1,1,-0.5]).reshape([3,1])

import numpy as np
def step_function(z):
    T=0
    if z >= T:
        y=1;
    elif z < T:
        y=0
    
    return y

x = np.array([1,1,1], [1,0,1], [0,1,1], [0,0,1])
w = np.array([1,1,-1.5].reshape([3,1]))

print(step_function(x[0].dot(W)))
print(step_function(x[1].dot(W)))
print(step_function(np.dot(x[2].W))
print(step_function(np.dot(x[3].W))

--------------------------------------------------------------

#다층신경망을 이용한 패턴분류기

import numpy as np

def step_function(z):
  T = 0  # 임계치 (Threshold, T)
  if z > T:
    y = 1
  elif z == T:
    y = 0
  elif z < T:
    y = -1
    
  return y
  
  x = np.array([[1, 1, 1],
              [1, 0, 1],
              [0, 1, 1],
              [0, 0, 1]])

w1 = np.array([-1, 1, -0.5]).reshape([3,1])
w2 = np.array([-1, 1, 0.5]).reshape([3, 1])
w3 = np.array([1, -1, 1]).reshape([3, 1])

for i in range(4):
  h1 = step_function(x[i].dot(w1))
  h2 = step_function(x[i].dot(w2))

  y = step_function(np.dot([h1, h2, 1], w3))
  print(y)
  
  ----------------------------------------------------
